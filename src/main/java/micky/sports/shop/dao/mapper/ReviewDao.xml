<!-- 1.IDao.xml 파일 생성 시 기존에 있던 내용 전부 삭제 -->
<!-- 2.https://mybatis.org/mybatis-3/configuration.html 에서 mapper 소스 복사하여 붙여넣기 -->
<!-- 3.namespace에 Interface IDao 경로 복사하여 붙여넣기 -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="micky.sports.shop.dao.ReviewDao">
	
	<!-- 1.join위해 사용한 ReviewDto -->
	<resultMap type="micky.sports.shop.dto.ReviewDto" id="ReviewDto">
		<result column="m_id" property="m_id" />
		<result column="r_no" property="r_no" />
		<result column="r_title" property="r_title" />
		<result column="r_content" property="r_content" />
		<result column="r_id" property="r_id" />
		<result column="r_retitle" property="r_retitle" />
		<result column="r_recontent" property="r_recontent" />
		<result column="r_ynn" property="r_ynn" />
		<result column="r_date" property="r_date" />
		<result column="r_group" property="r_group" />
		<result column="r_step" property="r_step" />
		<result column="r_indent" property="r_indent" />
		<result column="r_filesrc" property="r_filesrc" />
		<result column="r_score" property="r_score"/>
		<collection property="memberDto" resultMap="MemberDto" />
		<collection property="productDto" resultMap="ProductDto" />
	</resultMap>
	
	<!-- 2.join위해 사용한 MemberDto -->
	<resultMap type="micky.sports.shop.dto.MemberDto" id="MemberDto">
		<result column="m_id" property="m_id" />
		<result column="m_pw" property="m_pw" />
		<result column="m_name" property="m_name" />
		<result column="m_tel" property="m_tel" />
		<result column="m_name2" property="m_name2" />
		<result column="m_email" property="m_email" />
		<result column="m_grade" property="m_grade" />
		<result column="m_age" property="m_age" />
		<result column="m_gender" property="m_gender" />
		<result column="m_cash" property="m_cash" />
		<result column="m_filesrc" property="m_filesrc" />
	</resultMap>
	
	<!-- 3.join위해 사용한 ProductDto -->
	<resultMap type="micky.sports.shop.dto.ProductDto" id="ProductDto">
		<result column="p_no" property="p_no"/>
		<result column="p_name" property="p_name"/>
		<result column="p_price" property="p_price"/>
		<result column="p_cnt" property="p_cnt"/>
		<result column="p_color" property="p_color"/>
		<result column="p_size" property="p_size"/>
		<result column="p_filesrc" property="p_filesrc"/>
		<result column="p_date" property="p_date"/>
		<result column="p_category" property="p_category"/>
		<result column="p_info" property="p_info"/>
	</resultMap>
	
	<!-- productDetail 하단부에 표시될 리뷰 -->
	<select id="reviewboard" parameterType="micky.sports.shop.dto.ReviewDto" resultMap="ReviewDto">
		SELECT ROWNUM, R.*
		FROM (SELECT R.R_NO,M.M_ID,R.R_TITLE,R.R_CONTENT,R.R_ID,R.R_RETITLE,
		R.R_RECONTENT,R.R_YNN,R.R_DATE,R.R_GROUP,R.R_STEP,R.R_INDENT,R.R_FILESRC,R.R_SCORE,
		P.P_NO,P.P_NAME,P.P_COLOR,P.P_SIZE
		FROM MEMBER M, REVIEW R, PRODUCT P
		WHERE M.M_ID=R.M_ID
		AND R.P_NO=P.P_NO
		AND P_NAME=#{param3}
		AND R.R_CONTENT like '%'||#{param2}||'%'
		ORDER BY
		<choose>
			<when test="param1 eq 'r_group'">R_GROUP DESC</when>
			<otherwise>R_SCORE DESC, R_GROUP DESC</otherwise>
		</choose>
		) R
		
	</select>
	
	<!-- 글작성 -->
	<insert id="write">
		INSERT INTO REVIEW VALUES(REVIEW_SEQ.NEXTVAL,#{param1},
		#{param2},#{param3},'','','','n',SYSDATE,
		REVIEW_SEQ.CURRVAL,0,0,#{param4},#{param5},'')
	</insert>
	
	<!-- 글삭제 -->
	<delete id="delete">
		DELETE FROM REVIEW WHERE R_NO=#{param1}
	</delete>

	<!-- 마이페이지-후기탭에서 보이는 리뷰 -->
	<!-- 로그인 한 id가 작성한 리뷰글 전부 출력 -->
	<select id="mylistview" parameterType="micky.sports.shop.dto.ReviewDto" resultMap="ReviewDto">
		SELECT R.R_NO,M.M_ID,R.R_TITLE,R.R_CONTENT,R.R_ID,R.R_RETITLE,
		R.R_RECONTENT,R.R_YNN,R.R_DATE,R.R_GROUP,R.R_STEP,R.R_INDENT,R.R_FILESRC,R.R_SCORE,
		P.P_NO,P.P_NAME,P.P_COLOR,P.P_SIZE,P.P_FILESRC
		FROM MEMBER M, REVIEW R, PRODUCT P
		WHERE M.M_ID=R.M_ID
        AND R.P_NO=P.P_NO
		AND M.M_ID=#{param1}
		ORDER BY R.R_GROUP DESC, R.R_STEP ASC
		
	</select>
	
	<select id="popupview" resultType="micky.sports.shop.dto.ReviewDto">
		SELECT R_NO,M_ID,R_TITLE,R_CONTENT,R_ID,R_RETITLE,
		R_RECONTENT,R_YNN,R_DATE,R_GROUP,R_STEP,R_INDENT,R_FILESRC,R_SCORE,P_NO FROM REVIEW
		WHERE R_NO=#{param1}
		ORDER BY R_GROUP DESC, R_STEP ASC
	</select>
	
	<update id="modify">
		UPDATE REVIEW SET R_TITLE=#{param2},
		R_CONTENT=#{param3}, R_SCORE=#{param4}, R_FILESRC=#{param5}
		WHERE R_NO=#{param1}
	</update>
	
	<select id="replyview" resultType="micky.sports.shop.dto.ReviewDto">
		SELECT R_NO,M_ID,R_TITLE,R_CONTENT,R_ID,R_RETITLE,
		R_RECONTENT,R_YNN,R_DATE,R_GROUP,R_STEP,R_INDENT,R_FILESRC,R_SCORE,P_NO FROM REVIEW
		WHERE R_NO=#{param1}
		ORDER BY R_GROUP DESC, R_STEP ASC
	</select>
	
	<select id="totalCount" resultType="Integer">
		SELECT COUNT(*) FROM REVIEW
	</select>
	
	<!-- <select id="replyTotalCount" resultType="Integer">
		SELECT COUNT(R_RECONTENT) FROM REVIEW WHERE R_NO=#{param1, jdbcType=INTEGER}
	</select> -->
	
	<update id="replyUpdate">
		UPDATE REVIEW SET R_ID=#{param2},
		R_RETITLE=#{param3}, R_RECONTENT=#{param4},
		R_YNN='y' WHERE R_NO=#{param1}
	</update>
</mapper>